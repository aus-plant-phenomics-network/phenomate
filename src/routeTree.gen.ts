/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjectIndexRouteImport } from './routes/project.index'
import { Route as ProjectCreateRouteImport } from './routes/project.create'
import { Route as ActivityActivityIdRouteImport } from './routes/activity.$activityId'
import { Route as ProjectProjectIdOffloadRouteImport } from './routes/project.$projectId.offload'
import { Route as ProjectProjectIdActivitiesRouteImport } from './routes/project.$projectId.activities'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectIndexRoute = ProjectIndexRouteImport.update({
  id: '/project/',
  path: '/project/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectCreateRoute = ProjectCreateRouteImport.update({
  id: '/project/create',
  path: '/project/create',
  getParentRoute: () => rootRouteImport,
} as any)
const ActivityActivityIdRoute = ActivityActivityIdRouteImport.update({
  id: '/activity/$activityId',
  path: '/activity/$activityId',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectProjectIdOffloadRoute = ProjectProjectIdOffloadRouteImport.update({
  id: '/project/$projectId/offload',
  path: '/project/$projectId/offload',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectProjectIdActivitiesRoute =
  ProjectProjectIdActivitiesRouteImport.update({
    id: '/project/$projectId/activities',
    path: '/project/$projectId/activities',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/activity/$activityId': typeof ActivityActivityIdRoute
  '/project/create': typeof ProjectCreateRoute
  '/project': typeof ProjectIndexRoute
  '/project/$projectId/activities': typeof ProjectProjectIdActivitiesRoute
  '/project/$projectId/offload': typeof ProjectProjectIdOffloadRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/activity/$activityId': typeof ActivityActivityIdRoute
  '/project/create': typeof ProjectCreateRoute
  '/project': typeof ProjectIndexRoute
  '/project/$projectId/activities': typeof ProjectProjectIdActivitiesRoute
  '/project/$projectId/offload': typeof ProjectProjectIdOffloadRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/activity/$activityId': typeof ActivityActivityIdRoute
  '/project/create': typeof ProjectCreateRoute
  '/project/': typeof ProjectIndexRoute
  '/project/$projectId/activities': typeof ProjectProjectIdActivitiesRoute
  '/project/$projectId/offload': typeof ProjectProjectIdOffloadRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/activity/$activityId'
    | '/project/create'
    | '/project'
    | '/project/$projectId/activities'
    | '/project/$projectId/offload'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/activity/$activityId'
    | '/project/create'
    | '/project'
    | '/project/$projectId/activities'
    | '/project/$projectId/offload'
  id:
    | '__root__'
    | '/'
    | '/activity/$activityId'
    | '/project/create'
    | '/project/'
    | '/project/$projectId/activities'
    | '/project/$projectId/offload'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ActivityActivityIdRoute: typeof ActivityActivityIdRoute
  ProjectCreateRoute: typeof ProjectCreateRoute
  ProjectIndexRoute: typeof ProjectIndexRoute
  ProjectProjectIdActivitiesRoute: typeof ProjectProjectIdActivitiesRoute
  ProjectProjectIdOffloadRoute: typeof ProjectProjectIdOffloadRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/project/': {
      id: '/project/'
      path: '/project'
      fullPath: '/project'
      preLoaderRoute: typeof ProjectIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/project/create': {
      id: '/project/create'
      path: '/project/create'
      fullPath: '/project/create'
      preLoaderRoute: typeof ProjectCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/activity/$activityId': {
      id: '/activity/$activityId'
      path: '/activity/$activityId'
      fullPath: '/activity/$activityId'
      preLoaderRoute: typeof ActivityActivityIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/project/$projectId/offload': {
      id: '/project/$projectId/offload'
      path: '/project/$projectId/offload'
      fullPath: '/project/$projectId/offload'
      preLoaderRoute: typeof ProjectProjectIdOffloadRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/project/$projectId/activities': {
      id: '/project/$projectId/activities'
      path: '/project/$projectId/activities'
      fullPath: '/project/$projectId/activities'
      preLoaderRoute: typeof ProjectProjectIdActivitiesRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ActivityActivityIdRoute: ActivityActivityIdRoute,
  ProjectCreateRoute: ProjectCreateRoute,
  ProjectIndexRoute: ProjectIndexRoute,
  ProjectProjectIdActivitiesRoute: ProjectProjectIdActivitiesRoute,
  ProjectProjectIdOffloadRoute: ProjectProjectIdOffloadRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
